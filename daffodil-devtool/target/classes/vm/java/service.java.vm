package ${packageName}.service;

import java.util.List;

import com.daffodil.core.entity.Query;
import ${packageName}.entity.${ClassName};
#if($table.tree)
import com.daffodil.core.entity.Ztree;
#end

/**
 * ${functionName}Service接口
 * 
 * @author ${author}
 * @date ${datetime}
 * @version 1.0
 */
public interface I${ClassName}Service {
    /**
     * 查询${functionName}
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}ById(${pkColumn.columnType} ${pkColumn.javaField});
    
    /**
     * 分页查询${functionName}列表
     * 
     * @param query ${functionName}
     * @return ${functionName}集合
     */
    public List<${ClassName}> select${ClassName}List(Query<${ClassName}> query);

    /**
     * 新增${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    public void insert${ClassName}(${ClassName} ${className});

    /**
     * 修改${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    public void update${ClassName}(${ClassName} ${className});
    
#if($table.crud)
    /**
     * 批量删除${functionName}
     * 
     * @param ids 需要删除的数据ID
     * @return 结果
     */
    public void delete${ClassName}ByIds(String[] ids);
#end

#if($table.tree)
    /**
     * 删除${functionName}信息
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return 结果
     */
    public void delete${ClassName}ById(${pkColumn.columnType} ${pkColumn.javaField});

    /**
     * 查询${functionName}树列表
     * 
     * @return 所有${functionName}信息
     */
    public List<Ztree> ${className}TreeData(Query<${ClassName}> query);
#end
}
